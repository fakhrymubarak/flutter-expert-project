// Mocks generated by Mockito 5.3.0 from annotations
// in tv_shows/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i19;
import 'dart:typed_data' as _i20;

import 'package:core/core.dart' as _i8;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i4;
import 'package:http/io_client.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i18;
import 'package:tv_shows/data/datasources/local/db/tv_show_database_helper.dart'
    as _i17;
import 'package:tv_shows/data/datasources/local/tv_show_local_data_source.dart'
    as _i13;
import 'package:tv_shows/data/datasources/remote/tv_show_remote_data_source.dart'
    as _i11;
import 'package:tv_shows/data/models/tv_show_detail_model.dart' as _i3;
import 'package:tv_shows/data/models/tv_show_table.dart' as _i14;
import 'package:tv_shows/data/models/tv_shows_model.dart' as _i12;
import 'package:tv_shows/domain/entities/tv_show.dart' as _i9;
import 'package:tv_shows/domain/entities/tv_show_detail.dart' as _i10;
import 'package:tv_shows/domain/repositories/tv_shows_repository.dart' as _i6;
import 'package:watchlist/data/datasources/watchlist_local_data_source.dart'
    as _i15;
import 'package:watchlist/data/models/watchlist_table.dart' as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvShowDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvShowDetailResponse {
  _FakeTvShowDetailResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeIOStreamedResponse_3 extends _i1.SmartFake
    implements _i5.IOStreamedResponse {
  _FakeIOStreamedResponse_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [TvShowRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRepository extends _i1.Mock implements _i6.TvShowRepository {
  MockTvShowRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>> getOnAirTvShows() =>
      (super.noSuchMethod(Invocation.method(#getOnAirTvShows, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvShow>>(
                          this, Invocation.method(#getOnAirTvShows, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>> getPopularTvShows() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvShows, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvShow>>(
                          this, Invocation.method(#getPopularTvShows, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>> getTopRatedTvShows() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvShows, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvShow>>(
                          this, Invocation.method(#getTopRatedTvShows, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i10.TvShowDetail>> getTvShowDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowDetail, [id]),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, _i10.TvShowDetail>>.value(
                      _FakeEither_0<_i8.Failure, _i10.TvShowDetail>(
                          this, Invocation.method(#getTvShowDetail, [id]))))
          as _i7.Future<_i2.Either<_i8.Failure, _i10.TvShowDetail>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>
      getTvShowRecommendations(int? id) => (super.noSuchMethod(
              Invocation.method(#getTvShowRecommendations, [id]),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvShow>>(this,
                          Invocation.method(#getTvShowRecommendations, [id]))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> saveWatchlist(
          _i10.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tvShow]),
              returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [tvShow]))))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> removeWatchlist(
          _i10.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
              returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [tvShow]))))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i7.Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>> getWatchlistTvShow() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvShow, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvShow>>(
                          this, Invocation.method(#getWatchlistTvShow, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>> searchTvShows(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [query]),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvShow>>(
                          this, Invocation.method(#searchTvShows, [query]))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvShow>>>);
}

/// A class which mocks [TvShowRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRemoteDataSource extends _i1.Mock
    implements _i11.TvShowRemoteDataSource {
  MockTvShowRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i12.TvShowModel>> getOnAirTvShows() => (super.noSuchMethod(
          Invocation.method(#getOnAirTvShows, []),
          returnValue:
              _i7.Future<List<_i12.TvShowModel>>.value(<_i12.TvShowModel>[]))
      as _i7.Future<List<_i12.TvShowModel>>);
  @override
  _i7.Future<List<_i12.TvShowModel>> getPopularTvShows() => (super.noSuchMethod(
          Invocation.method(#getPopularTvShows, []),
          returnValue:
              _i7.Future<List<_i12.TvShowModel>>.value(<_i12.TvShowModel>[]))
      as _i7.Future<List<_i12.TvShowModel>>);
  @override
  _i7.Future<List<_i12.TvShowModel>> getTopRatedTvShows() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvShows, []),
          returnValue: _i7.Future<List<_i12.TvShowModel>>.value(
              <_i12.TvShowModel>[])) as _i7.Future<List<_i12.TvShowModel>>);
  @override
  _i7.Future<_i3.TvShowDetailResponse> getTvShowDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowDetail, [id]),
              returnValue: _i7.Future<_i3.TvShowDetailResponse>.value(
                  _FakeTvShowDetailResponse_1(
                      this, Invocation.method(#getTvShowDetail, [id]))))
          as _i7.Future<_i3.TvShowDetailResponse>);
  @override
  _i7.Future<List<_i12.TvShowModel>> getTvShowRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowRecommendations, [id]),
          returnValue: _i7.Future<List<_i12.TvShowModel>>.value(
              <_i12.TvShowModel>[])) as _i7.Future<List<_i12.TvShowModel>>);
  @override
  _i7.Future<List<_i12.TvShowModel>> searchTvShows(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [query]),
          returnValue: _i7.Future<List<_i12.TvShowModel>>.value(
              <_i12.TvShowModel>[])) as _i7.Future<List<_i12.TvShowModel>>);
}

/// A class which mocks [TvShowLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowLocalDataSource extends _i1.Mock
    implements _i13.TvShowLocalDataSource {
  MockTvShowLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> cacheOnAirTvShow(List<_i14.TvShowTable>? tvShows) =>
      (super.noSuchMethod(Invocation.method(#cacheOnAirTvShow, [tvShows]),
              returnValue: _i7.Future<void>.value(),
              returnValueForMissingStub: _i7.Future<void>.value())
          as _i7.Future<void>);
  @override
  _i7.Future<List<_i14.TvShowTable>> getCachedOnAirTvShow() =>
      (super.noSuchMethod(Invocation.method(#getCachedOnAirTvShow, []),
          returnValue: _i7.Future<List<_i14.TvShowTable>>.value(
              <_i14.TvShowTable>[])) as _i7.Future<List<_i14.TvShowTable>>);
  @override
  _i7.Future<void> cachePopularTvShow(List<_i14.TvShowTable>? tvShows) =>
      (super.noSuchMethod(Invocation.method(#cachePopularTvShow, [tvShows]),
              returnValue: _i7.Future<void>.value(),
              returnValueForMissingStub: _i7.Future<void>.value())
          as _i7.Future<void>);
  @override
  _i7.Future<List<_i14.TvShowTable>> getCachedPopularTvShow() =>
      (super.noSuchMethod(Invocation.method(#getCachedPopularTvShow, []),
          returnValue: _i7.Future<List<_i14.TvShowTable>>.value(
              <_i14.TvShowTable>[])) as _i7.Future<List<_i14.TvShowTable>>);
  @override
  _i7.Future<void> cacheTopRatedTvShow(List<_i14.TvShowTable>? tvShows) =>
      (super.noSuchMethod(Invocation.method(#cacheTopRatedTvShow, [tvShows]),
              returnValue: _i7.Future<void>.value(),
              returnValueForMissingStub: _i7.Future<void>.value())
          as _i7.Future<void>);
  @override
  _i7.Future<List<_i14.TvShowTable>> getCachedTopRatedTvShow() =>
      (super.noSuchMethod(Invocation.method(#getCachedTopRatedTvShow, []),
          returnValue: _i7.Future<List<_i14.TvShowTable>>.value(
              <_i14.TvShowTable>[])) as _i7.Future<List<_i14.TvShowTable>>);
}

/// A class which mocks [WatchlistLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistLocalDataSource extends _i1.Mock
    implements _i15.WatchlistLocalDataSource {
  MockWatchlistLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlist(_i16.WatchlistTable? watchlist) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [watchlist]),
          returnValue: _i7.Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<String> removeWatchlist(_i16.WatchlistTable? watchlist) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [watchlist]),
          returnValue: _i7.Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i16.WatchlistTable?> getTvShowById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowById, [id]),
              returnValue: _i7.Future<_i16.WatchlistTable?>.value())
          as _i7.Future<_i16.WatchlistTable?>);
  @override
  _i7.Future<List<_i16.WatchlistTable>> getWatchlistTvShow() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvShow, []),
              returnValue: _i7.Future<List<_i16.WatchlistTable>>.value(
                  <_i16.WatchlistTable>[]))
          as _i7.Future<List<_i16.WatchlistTable>>);
  @override
  _i7.Future<_i16.WatchlistTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i7.Future<_i16.WatchlistTable?>.value())
          as _i7.Future<_i16.WatchlistTable?>);
  @override
  _i7.Future<List<_i16.WatchlistTable>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: _i7.Future<List<_i16.WatchlistTable>>.value(
                  <_i16.WatchlistTable>[]))
          as _i7.Future<List<_i16.WatchlistTable>>);
}

/// A class which mocks [TvShowDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowDatabaseHelper extends _i1.Mock
    implements _i17.TvShowDatabaseHelper {
  MockTvShowDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i18.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: _i7.Future<_i18.Database?>.value())
          as _i7.Future<_i18.Database?>);
  @override
  _i7.Future<void> insertCacheTvShowTransaction(
          List<_i14.TvShowTable>? tvShows, String? category) =>
      (super.noSuchMethod(
          Invocation.method(#insertCacheTvShowTransaction, [tvShows, category]),
          returnValue: _i7.Future<void>.value(),
          returnValueForMissingStub:
              _i7.Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getCachesTvShow(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCachesTvShow, [category]),
              returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i7.Future<List<Map<String, dynamic>>>);
  @override
  _i7.Future<int> clearCacheTvShow(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearCacheTvShow, [category]),
          returnValue: _i7.Future<int>.value(0)) as _i7.Future<int>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: _i7.Future<bool>.value(false)) as _i7.Future<bool>);
}

/// A class which mocks [ApiIOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiIOClient extends _i1.Mock implements _i8.ApiIOClient {
  MockApiIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i7.Future<_i4.Response>.value(_FakeResponse_2(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i5.IOStreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i7.Future<_i5.IOStreamedResponse>.value(
                  _FakeIOStreamedResponse_3(
                      this, Invocation.method(#send, [request]))))
          as _i7.Future<_i5.IOStreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  _i7.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i7.Future<_i4.Response>.value(_FakeResponse_2(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i19.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i7.Future<_i4.Response>.value(_FakeResponse_2(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i19.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i7.Future<_i4.Response>.value(_FakeResponse_2(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i19.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i7.Future<_i4.Response>.value(_FakeResponse_2(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i19.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i7.Future<_i4.Response>.value(_FakeResponse_2(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i7.Future<_i4.Response>);
  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i7.Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i20.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i7.Future<_i20.Uint8List>.value(_i20.Uint8List(0)))
          as _i7.Future<_i20.Uint8List>);
}
