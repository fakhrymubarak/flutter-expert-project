// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/presentation/provider/tv_shows/tv_show_detail_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i7;
import 'package:ditonton/domain/entities/tv_show.dart' as _i10;
import 'package:ditonton/domain/entities/tv_show_detail.dart' as _i8;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i4;
import 'package:ditonton/domain/repositories/tv_shows_repository.dart' as _i2;
import 'package:ditonton/domain/usecases/tv_shows/get_recommendation_tv_show.dart'
    as _i9;
import 'package:ditonton/domain/usecases/tv_shows/get_tv_show_detail.dart'
    as _i5;
import 'package:ditonton/domain/usecases/watchlists/get_watchlist_status.dart'
    as _i11;
import 'package:ditonton/domain/usecases/watchlists/remove_tv_show_watchlist.dart'
    as _i13;
import 'package:ditonton/domain/usecases/watchlists/save_tv_show_watchlist.dart'
    as _i12;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvShowRepository_0 extends _i1.SmartFake
    implements _i2.TvShowRepository {
  _FakeTvShowRepository_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMovieRepository_2 extends _i1.SmartFake
    implements _i4.MovieRepository {
  _FakeMovieRepository_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GetTvShowDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvShowDetail extends _i1.Mock implements _i5.GetTvShowDetail {
  MockGetTvShowDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeTvShowRepository_0(this, Invocation.getter(#repository)))
          as _i2.TvShowRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i8.TvShowDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue:
                  _i6.Future<_i3.Either<_i7.Failure, _i8.TvShowDetail>>.value(
                      _FakeEither_1<_i7.Failure, _i8.TvShowDetail>(
                          this, Invocation.method(#execute, [id]))))
          as _i6.Future<_i3.Either<_i7.Failure, _i8.TvShowDetail>>);
}

/// A class which mocks [GetTvShowRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvShowRecommendations extends _i1.Mock
    implements _i9.GetTvShowRecommendations {
  MockGetTvShowRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeTvShowRepository_0(this, Invocation.getter(#repository)))
          as _i2.TvShowRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i10.TvShow>>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue:
                  _i6.Future<_i3.Either<_i7.Failure, List<_i10.TvShow>>>.value(
                      _FakeEither_1<_i7.Failure, List<_i10.TvShow>>(
                          this, Invocation.method(#execute, [id]))))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i10.TvShow>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i11.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get mRepository =>
      (super.noSuchMethod(Invocation.getter(#mRepository),
              returnValue:
                  _FakeMovieRepository_2(this, Invocation.getter(#mRepository)))
          as _i4.MovieRepository);
  @override
  _i2.TvShowRepository get tRepository => (super.noSuchMethod(
          Invocation.getter(#tRepository),
          returnValue:
              _FakeTvShowRepository_0(this, Invocation.getter(#tRepository)))
      as _i2.TvShowRepository);
  @override
  _i6.Future<bool> execute(int? id, bool? isMovie) =>
      (super.noSuchMethod(Invocation.method(#execute, [id, isMovie]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [SaveTvShowWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTvShowWatchlist extends _i1.Mock
    implements _i12.SaveTvShowWatchlist {
  MockSaveTvShowWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeTvShowRepository_0(this, Invocation.getter(#repository)))
          as _i2.TvShowRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i8.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvShow]),
              returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>(
                      this, Invocation.method(#execute, [tvShow]))))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [RemoveTvShowWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTvShowWatchlist extends _i1.Mock
    implements _i13.RemoveTvShowWatchlist {
  MockRemoveTvShowWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeTvShowRepository_0(this, Invocation.getter(#repository)))
          as _i2.TvShowRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i8.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvShow]),
              returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>(
                      this, Invocation.method(#execute, [tvShow]))))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}
