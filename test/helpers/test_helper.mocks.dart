// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i27;
import 'dart:typed_data' as _i28;

import 'package:core/core.dart' as _i9;
import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/data/datasources/local/db/database_helper.dart'
    as _i25;
import 'package:ditonton/data/datasources/local/movie_local_data_source.dart'
    as _i14;
import 'package:ditonton/data/datasources/local/tv_show_local_data_source.dart'
    as _i21;
import 'package:ditonton/data/datasources/local/watchlist_local_data_source.dart'
    as _i23;
import 'package:ditonton/data/datasources/remote/movie_remote_data_source.dart'
    as _i12;
import 'package:ditonton/data/datasources/remote/tv_show_remote_data_source.dart'
    as _i19;
import 'package:ditonton/data/models/movies/movie_detail_model.dart' as _i3;
import 'package:ditonton/data/models/movies/movie_model.dart' as _i13;
import 'package:ditonton/data/models/movies/movie_table.dart' as _i15;
import 'package:ditonton/data/models/tv_shows/tv_show_detail_model.dart' as _i4;
import 'package:ditonton/data/models/tv_shows/tv_show_table.dart' as _i22;
import 'package:ditonton/data/models/tv_shows/tv_shows_model.dart' as _i20;
import 'package:ditonton/data/models/watchlist/watchlist_table.dart' as _i24;
import 'package:ditonton/domain/entities/movie.dart' as _i10;
import 'package:ditonton/domain/entities/movie_detail.dart' as _i11;
import 'package:ditonton/domain/entities/tv_show.dart' as _i17;
import 'package:ditonton/domain/entities/tv_show_detail.dart' as _i18;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i7;
import 'package:ditonton/domain/repositories/tv_shows_repository.dart' as _i16;
import 'package:http/http.dart' as _i5;
import 'package:http/io_client.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i26;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvShowDetailResponse_2 extends _i1.SmartFake
    implements _i4.TvShowDetailResponse {
  _FakeTvShowDetailResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_3 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeIOStreamedResponse_4 extends _i1.SmartFake
    implements _i6.IOStreamedResponse {
  _FakeIOStreamedResponse_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i7.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                          this, Invocation.method(#getNowPlayingMovies, []))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                          this, Invocation.method(#getPopularMovies, []))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                          this, Invocation.method(#getTopRatedMovies, []))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>.value(
                      _FakeEither_0<_i9.Failure, _i11.MovieDetail>(
                          this, Invocation.method(#getMovieDetail, [id]))))
          as _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i10.Movie>>(this,
                          Invocation.method(#getMovieRecommendations, [id]))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                          this, Invocation.method(#searchMovies, [query]))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlist(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [movie]))))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlist(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [movie]))))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i8.Future<bool>.value(false)) as _i8.Future<bool>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                          this, Invocation.method(#getWatchlistMovies, []))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i12.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i13.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  _i8.Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
          as _i8.Future<List<_i13.MovieModel>>);
  @override
  _i8.Future<List<_i13.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
              returnValue:
                  _i8.Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
          as _i8.Future<List<_i13.MovieModel>>);
  @override
  _i8.Future<List<_i13.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
              returnValue:
                  _i8.Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
          as _i8.Future<List<_i13.MovieModel>>);
  @override
  _i8.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue: _i8.Future<_i3.MovieDetailResponse>.value(
                  _FakeMovieDetailResponse_1(
                      this, Invocation.method(#getMovieDetail, [id]))))
          as _i8.Future<_i3.MovieDetailResponse>);
  @override
  _i8.Future<List<_i13.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  _i8.Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
          as _i8.Future<List<_i13.MovieModel>>);
  @override
  _i8.Future<List<_i13.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  _i8.Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
          as _i8.Future<List<_i13.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i14.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> cacheNowPlayingMovies(List<_i15.MovieTable>? movies) =>
      (super.noSuchMethod(Invocation.method(#cacheNowPlayingMovies, [movies]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<List<_i15.MovieTable>> getCachedNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getCachedNowPlayingMovies, []),
              returnValue:
                  _i8.Future<List<_i15.MovieTable>>.value(<_i15.MovieTable>[]))
          as _i8.Future<List<_i15.MovieTable>>);
  @override
  _i8.Future<void> cachePopularMovies(List<_i15.MovieTable>? movies) =>
      (super.noSuchMethod(Invocation.method(#cachePopularMovies, [movies]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<List<_i15.MovieTable>> getCachedPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getCachedPopularMovies, []),
              returnValue:
                  _i8.Future<List<_i15.MovieTable>>.value(<_i15.MovieTable>[]))
          as _i8.Future<List<_i15.MovieTable>>);
  @override
  _i8.Future<void> cacheTopRatedMovies(List<_i15.MovieTable>? movies) =>
      (super.noSuchMethod(Invocation.method(#cacheTopRatedMovies, [movies]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<List<_i15.MovieTable>> getCachedTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getCachedTopRatedMovies, []),
              returnValue:
                  _i8.Future<List<_i15.MovieTable>>.value(<_i15.MovieTable>[]))
          as _i8.Future<List<_i15.MovieTable>>);
}

/// A class which mocks [TvShowRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRepository extends _i1.Mock implements _i16.TvShowRepository {
  MockTvShowRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>> getOnAirTvShows() =>
      (super.noSuchMethod(Invocation.method(#getOnAirTvShows, []),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i17.TvShow>>(
                          this, Invocation.method(#getOnAirTvShows, []))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>> getPopularTvShows() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvShows, []),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i17.TvShow>>(
                          this, Invocation.method(#getPopularTvShows, []))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>> getTopRatedTvShows() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvShows, []),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i17.TvShow>>(
                          this, Invocation.method(#getTopRatedTvShows, []))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, _i18.TvShowDetail>> getTvShowDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowDetail, [id]),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, _i18.TvShowDetail>>.value(
                      _FakeEither_0<_i9.Failure, _i18.TvShowDetail>(
                          this, Invocation.method(#getTvShowDetail, [id]))))
          as _i8.Future<_i2.Either<_i9.Failure, _i18.TvShowDetail>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>
      getTvShowRecommendations(int? id) => (super.noSuchMethod(
              Invocation.method(#getTvShowRecommendations, [id]),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i17.TvShow>>(this,
                          Invocation.method(#getTvShowRecommendations, [id]))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlist(
          _i18.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tvShow]),
              returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [tvShow]))))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlist(
          _i18.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
              returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [tvShow]))))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i8.Future<bool>.value(false)) as _i8.Future<bool>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>> getWatchlistTvShow() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvShow, []),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i17.TvShow>>(
                          this, Invocation.method(#getWatchlistTvShow, []))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>> searchTvShows(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [query]),
              returnValue:
                  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i17.TvShow>>(
                          this, Invocation.method(#searchTvShows, [query]))))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvShow>>>);
}

/// A class which mocks [TvShowRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRemoteDataSource extends _i1.Mock
    implements _i19.TvShowRemoteDataSource {
  MockTvShowRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i20.TvShowModel>> getOnAirTvShows() => (super.noSuchMethod(
          Invocation.method(#getOnAirTvShows, []),
          returnValue:
              _i8.Future<List<_i20.TvShowModel>>.value(<_i20.TvShowModel>[]))
      as _i8.Future<List<_i20.TvShowModel>>);
  @override
  _i8.Future<List<_i20.TvShowModel>> getPopularTvShows() => (super.noSuchMethod(
          Invocation.method(#getPopularTvShows, []),
          returnValue:
              _i8.Future<List<_i20.TvShowModel>>.value(<_i20.TvShowModel>[]))
      as _i8.Future<List<_i20.TvShowModel>>);
  @override
  _i8.Future<List<_i20.TvShowModel>> getTopRatedTvShows() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvShows, []),
          returnValue: _i8.Future<List<_i20.TvShowModel>>.value(
              <_i20.TvShowModel>[])) as _i8.Future<List<_i20.TvShowModel>>);
  @override
  _i8.Future<_i4.TvShowDetailResponse> getTvShowDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowDetail, [id]),
              returnValue: _i8.Future<_i4.TvShowDetailResponse>.value(
                  _FakeTvShowDetailResponse_2(
                      this, Invocation.method(#getTvShowDetail, [id]))))
          as _i8.Future<_i4.TvShowDetailResponse>);
  @override
  _i8.Future<List<_i20.TvShowModel>> getTvShowRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowRecommendations, [id]),
          returnValue: _i8.Future<List<_i20.TvShowModel>>.value(
              <_i20.TvShowModel>[])) as _i8.Future<List<_i20.TvShowModel>>);
  @override
  _i8.Future<List<_i20.TvShowModel>> searchTvShows(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [query]),
          returnValue: _i8.Future<List<_i20.TvShowModel>>.value(
              <_i20.TvShowModel>[])) as _i8.Future<List<_i20.TvShowModel>>);
}

/// A class which mocks [TvShowLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowLocalDataSource extends _i1.Mock
    implements _i21.TvShowLocalDataSource {
  MockTvShowLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> cacheOnAirTvShow(List<_i22.TvShowTable>? tvShows) =>
      (super.noSuchMethod(Invocation.method(#cacheOnAirTvShow, [tvShows]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<List<_i22.TvShowTable>> getCachedOnAirTvShow() =>
      (super.noSuchMethod(Invocation.method(#getCachedOnAirTvShow, []),
          returnValue: _i8.Future<List<_i22.TvShowTable>>.value(
              <_i22.TvShowTable>[])) as _i8.Future<List<_i22.TvShowTable>>);
  @override
  _i8.Future<void> cachePopularTvShow(List<_i22.TvShowTable>? tvShows) =>
      (super.noSuchMethod(Invocation.method(#cachePopularTvShow, [tvShows]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<List<_i22.TvShowTable>> getCachedPopularTvShow() =>
      (super.noSuchMethod(Invocation.method(#getCachedPopularTvShow, []),
          returnValue: _i8.Future<List<_i22.TvShowTable>>.value(
              <_i22.TvShowTable>[])) as _i8.Future<List<_i22.TvShowTable>>);
  @override
  _i8.Future<void> cacheTopRatedTvShow(List<_i22.TvShowTable>? tvShows) =>
      (super.noSuchMethod(Invocation.method(#cacheTopRatedTvShow, [tvShows]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<List<_i22.TvShowTable>> getCachedTopRatedTvShow() =>
      (super.noSuchMethod(Invocation.method(#getCachedTopRatedTvShow, []),
          returnValue: _i8.Future<List<_i22.TvShowTable>>.value(
              <_i22.TvShowTable>[])) as _i8.Future<List<_i22.TvShowTable>>);
}

/// A class which mocks [WatchlistLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistLocalDataSource extends _i1.Mock
    implements _i23.WatchlistLocalDataSource {
  MockWatchlistLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i24.WatchlistTable? watchlist) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [watchlist]),
          returnValue: _i8.Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<String> removeWatchlist(_i24.WatchlistTable? watchlist) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [watchlist]),
          returnValue: _i8.Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i24.WatchlistTable?> getTvShowById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowById, [id]),
              returnValue: _i8.Future<_i24.WatchlistTable?>.value())
          as _i8.Future<_i24.WatchlistTable?>);
  @override
  _i8.Future<List<_i24.WatchlistTable>> getWatchlistTvShow() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvShow, []),
              returnValue: _i8.Future<List<_i24.WatchlistTable>>.value(
                  <_i24.WatchlistTable>[]))
          as _i8.Future<List<_i24.WatchlistTable>>);
  @override
  _i8.Future<_i24.WatchlistTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i8.Future<_i24.WatchlistTable?>.value())
          as _i8.Future<_i24.WatchlistTable?>);
  @override
  _i8.Future<List<_i24.WatchlistTable>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: _i8.Future<List<_i24.WatchlistTable>>.value(
                  <_i24.WatchlistTable>[]))
          as _i8.Future<List<_i24.WatchlistTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i25.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i26.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: _i8.Future<_i26.Database?>.value())
          as _i8.Future<_i26.Database?>);
  @override
  _i8.Future<void> insertCacheMovieTransaction(
          List<_i15.MovieTable>? movies, String? category) =>
      (super.noSuchMethod(
          Invocation.method(#insertCacheMovieTransaction, [movies, category]),
          returnValue: _i8.Future<void>.value(),
          returnValueForMissingStub:
              _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getCacheMovies(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCacheMovies, [category]),
              returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
  @override
  _i8.Future<int> clearCacheMovie(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearCacheMovie, [category]),
          returnValue: _i8.Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<void> insertCacheTvShowTransaction(
          List<_i22.TvShowTable>? tvShows, String? category) =>
      (super.noSuchMethod(
          Invocation.method(#insertCacheTvShowTransaction, [tvShows, category]),
          returnValue: _i8.Future<void>.value(),
          returnValueForMissingStub:
              _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getCachesTvShow(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCachesTvShow, [category]),
              returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
  @override
  _i8.Future<int> clearCacheTvShow(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearCacheTvShow, [category]),
          returnValue: _i8.Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<int> insertWatchlist(_i24.WatchlistTable? watchlist) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [watchlist]),
          returnValue: _i8.Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchlist(_i24.WatchlistTable? watchlist) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [watchlist]),
          returnValue: _i8.Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getMovieWatchlistById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieWatchlistById, [id]),
              returnValue: _i8.Future<Map<String, dynamic>?>.value())
          as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<Map<String, dynamic>?> getTvShowWatchlistById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowWatchlistById, [id]),
              returnValue: _i8.Future<Map<String, dynamic>?>.value())
          as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistTvShow() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvShow, []),
              returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i9.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: _i8.Future<bool>.value(false)) as _i8.Future<bool>);
}

/// A class which mocks [ApiIOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiIOClient extends _i1.Mock implements _i9.ApiIOClient {
  MockApiIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i5.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i8.Future<_i5.Response>.value(_FakeResponse_3(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i6.IOStreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i8.Future<_i6.IOStreamedResponse>.value(
                  _FakeIOStreamedResponse_4(
                      this, Invocation.method(#send, [request]))))
          as _i8.Future<_i6.IOStreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  _i8.Future<_i5.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i8.Future<_i5.Response>.value(_FakeResponse_3(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i5.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i27.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i8.Future<_i5.Response>.value(_FakeResponse_3(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i5.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i27.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i8.Future<_i5.Response>.value(_FakeResponse_3(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i5.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i27.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i8.Future<_i5.Response>.value(_FakeResponse_3(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i5.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i27.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i8.Future<_i5.Response>.value(_FakeResponse_3(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i8.Future<_i5.Response>);
  @override
  _i8.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i8.Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i28.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i8.Future<_i28.Uint8List>.value(_i28.Uint8List(0)))
          as _i8.Future<_i28.Uint8List>);
}
